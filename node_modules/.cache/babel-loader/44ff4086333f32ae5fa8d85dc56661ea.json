{"ast":null,"code":"import _classCallCheck from \"/Users/sikidamjanovic/Documents/GitHub/Kino-Movie/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sikidamjanovic/Documents/GitHub/Kino-Movie/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sikidamjanovic/Documents/GitHub/Kino-Movie/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sikidamjanovic/Documents/GitHub/Kino-Movie/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sikidamjanovic/Documents/GitHub/Kino-Movie/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/sikidamjanovic/Documents/GitHub/Kino-Movie/src/containers/MovieFull.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport '../css/movie-full.css';\nimport '../css/main.css';\nimport { Grid, Row, Col, Clearfix } from 'react-bootstrap';\nimport ReactStars from 'react-stars';\nimport { render } from 'react-dom';\nimport Search from '../components/Search';\nimport Recommender from '../containers/Recommender';\nimport myDataset from '../movie_titles.csv';\nimport { Link } from 'react-router';\nimport logo from '../img/kino3.png';\nimport x from '../img/x.png';\nimport check from '../img/check.png';\nimport Palette from 'react-palette';\nimport NavDrawer from '../components/NavDrawer';\nimport { cpus } from 'os';\n\nvar ratingChanged = function ratingChanged(newRating) {\n  console.log(newRating);\n};\n\nvar MovieFull =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MovieFull, _Component);\n\n  function MovieFull(props) {\n    var _this;\n\n    _classCallCheck(this, MovieFull);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MovieFull).call(this, props));\n    _this.state = {\n      requestFailed: false\n    };\n    return _this;\n  }\n\n  _createClass(MovieFull, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch('https://api.themoviedb.org/3/movie/' + this.props.params.id + '?api_key=17c21a1abd8ae7be6ee8986389011906').then(function (response) {\n        if (!response.ok) {\n          throw Error(\"Network request failed\");\n        }\n\n        return response;\n      }).then(function (d) {\n        return d.json();\n      }).then(function (d) {\n        _this2.setState({\n          movieData: d\n        });\n      }, function () {\n        _this2.setState({\n          requestFailed: true\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      if (this.state.requestFailed) return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"Failed!\");\n      if (!this.state.movieData) return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"Loading...\");\n      var rating = this.state.movieData.vote_average / 2;\n      var title = this.state.movieData.title;\n      return React.createElement(\"div\", {\n        className: \"movie-full-page\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(NavDrawer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), React.createElement(Search, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }), React.createElement(Palette, {\n        image: \"https://image.tmdb.org/t/p/w1280\" + this.state.movieData.backdrop_path,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, function (palette) {\n        return React.createElement(Grid, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, React.createElement(Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, React.createElement(Col, {\n          sm: 6,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          className: \"movie-full-image\",\n          src: \"https://image.tmdb.org/t/p/w1280\" + _this3.state.movieData.poster_path,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        })), React.createElement(Col, {\n          sm: 6,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          className: \"movie-full-title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, _this3.state.movieData.title), React.createElement(\"p\", {\n          className: \"movie-full-genres\",\n          style: {\n            color: palette.vibrant\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, _this3.state.movieData.genres[0].name, \" | \", _this3.state.movieData.runtime, \" Minutes | \", _this3.state.movieData.release_date), React.createElement(\"p\", {\n          className: \"movie-full-overview\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, _this3.state.movieData.overview), React.createElement(Link, {\n          to: {\n            pathname: \"/Recommender/\".concat(_this3.state.movieData.id)\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          style: {\n            borderColor: palette.vibrant,\n            color: palette.vibrant\n          },\n          className: \"recom-button\",\n          onClick: \"reload()\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, \"Recommendations\")))));\n      }));\n    }\n  }]);\n\n  return MovieFull;\n}(Component);\n\nexport default MovieFull;","map":{"version":3,"sources":["/Users/sikidamjanovic/Documents/GitHub/Kino-Movie/src/containers/MovieFull.js"],"names":["React","Component","PropTypes","Grid","Row","Col","Clearfix","ReactStars","render","Search","Recommender","myDataset","Link","logo","x","check","Palette","NavDrawer","cpus","ratingChanged","newRating","console","log","MovieFull","props","state","requestFailed","fetch","params","id","then","response","ok","Error","d","json","setState","movieData","rating","vote_average","title","backdrop_path","palette","poster_path","color","vibrant","genres","name","runtime","release_date","overview","pathname","borderColor"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport PropTypes from 'prop-types'\nimport '../css/movie-full.css';\nimport '../css/main.css';\nimport {Grid, Row, Col, Clearfix} from 'react-bootstrap'\nimport ReactStars from 'react-stars'\nimport { render } from 'react-dom'\nimport Search from '../components/Search'\nimport Recommender from '../containers/Recommender'\nimport myDataset from '../movie_titles.csv';\nimport {Link} from 'react-router'\nimport logo from '../img/kino3.png'\nimport x from '../img/x.png'\nimport check from '../img/check.png'\nimport Palette from 'react-palette'\nimport NavDrawer from '../components/NavDrawer'\nimport { cpus } from 'os';\n\nconst ratingChanged = (newRating) => {\n  console.log(newRating)\n}\n\nclass MovieFull extends Component{\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      requestFailed: false\n    }\n  }\n\n  componentDidMount() {\n    fetch('https://api.themoviedb.org/3/movie/' + this.props.params.id + '?api_key=17c21a1abd8ae7be6ee8986389011906')\n      .then(response => {\n        if (!response.ok) {\n          throw Error(\"Network request failed\")\n        }\n        return response\n      })\n      .then(d => d.json())\n      .then(d => {\n        this.setState({\n          movieData: d\n        })\n      }, () => {\n        this.setState({\n          requestFailed: true\n        })\n      })\n  }\n\n\n  render () {\n\n    if (this.state.requestFailed) return <p>Failed!</p>\n    if (!this.state.movieData) return <p>Loading...</p>\n\n    var rating = (this.state.movieData.vote_average)/2\n    var title = (this.state.movieData.title)\n\n    return (\n      <div className=\"movie-full-page\">\n        <NavDrawer/>\n        <Search/>\n\n        <Palette image={\"https://image.tmdb.org/t/p/w1280\" + this.state.movieData.backdrop_path}>\n          {palette => (\n            <Grid>\n                <Row>\n                    <Col sm={6}>\n                        <img className=\"movie-full-image\"src={\"https://image.tmdb.org/t/p/w1280\" + this.state.movieData.poster_path}/>\n                    </Col>\n                    <Col sm={6}>\n                        <h1 className=\"movie-full-title\">{this.state.movieData.title}</h1>\n                        <p className=\"movie-full-genres\"  style={{ color: palette.vibrant }}>{this.state.movieData.genres[0].name} | {this.state.movieData.runtime} Minutes | {this.state.movieData.release_date}</p>\n                        <p className=\"movie-full-overview\">{this.state.movieData.overview}</p>\n                        <Link to= {{pathname: `/Recommender/${this.state.movieData.id}`}}>\n                        <p style={{borderColor: palette.vibrant, color: palette.vibrant }}className=\"recom-button\" onClick='reload()'>Recommendations</p>\n                        </Link>\n                    </Col>\n                </Row>\n            </Grid>\n            )}\n        </Palette>\n\n\n        {/* <img className=\"logo-img-full\" src={logo}/> \n\n            <div>    \n              <img className=\"movie-full-backdrop\"src={\"https://image.tmdb.org/t/p/w1280\" + this.state.movieData.backdrop_path}/>\n              <div className=\"movie-full-background\">\n                    <ReactStars\n                      count={5}\n                      value={rating}\n                      size={24}\n                      color1={palette.darkMuted}\n                      color2={palette.vibrant}\n                      className={'stars'}\n                    />\n                    <p style={{ color: palette.vibrant }} className=\"movie-full-vote\">{this.state.movieData.vote_average} /10</p>\n                    <Link to= {{pathname: `/Recommender/${this.state.movieData.id}`}}>\n                      <p style={{borderColor: palette.vibrant, color: palette.vibrant }}className=\"recom-button\" onClick='reload()'>Recommendations</p>\n                    </Link>\n              </div>\n         </div> */}\n\n      </div>\n    )\n  }\n}\n\nexport default MovieFull\n"]},"metadata":{},"sourceType":"module"}