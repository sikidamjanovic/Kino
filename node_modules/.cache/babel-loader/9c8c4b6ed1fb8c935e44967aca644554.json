{"ast":null,"code":"var _jsxFileName = \"/Users/sikidamjanovic/Documents/GitHub/react-movie-database/src/components/MovieModal.js\";\nimport React, { Component } from 'react';\nimport Modal from 'react-modal';\nimport { IoIosStar, IoMdTime, IoIosPlay } from 'react-icons/io';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport '../css/modal.css';\nModal.setAppElement('#root');\n\nclass MovieModal extends Component {\n  constructor(props) {\n    super(props);\n    this.closeModal = this.closeModal.bind(this);\n  }\n\n  closeModal() {\n    return this.props.isOpen;\n  }\n\n  getGenres() {\n    var genres = this.props.data.genres;\n\n    if (genres) {\n      var string = '';\n\n      for (let i = 0; i < genres.length; i++) {\n        string += genres[i].name + ' / ';\n      }\n\n      return string.substring(0, string.length - 2);\n    } else {\n      return 'Unknown';\n    }\n  }\n\n  formatRevenue() {\n    var x = this.props.data.revenue;\n\n    if (x) {\n      return '$' + x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n    } else {\n      return 'Unknown';\n    }\n  }\n\n  renderPoster() {\n    var poster = this.props.data.poster_path;\n\n    if (poster) {\n      return React.createElement(\"img\", {\n        id: \"modalPoster\",\n        src: \"https://image.tmdb.org/t/p/w500\" + this.props.data.poster_path,\n        alt: \"poster\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      });\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      isOpen: this.props.isOpen,\n      onRequestClose: this.closeModal,\n      id: \"modal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      id: \"button\",\n      onClick: this.closeModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"X\"), React.createElement(\"img\", {\n      src: \"https://image.tmdb.org/t/p/original/\" + this.props.data.backdrop_path,\n      id: \"bgImage\",\n      alt: \"bg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(Container, {\n      id: \"modalContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(Row, {\n      id: \"modalRow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 6,\n      id: \"modalInfo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, this.props.data.title), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, this.props.data.overview), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(IoIosPlay, {\n      className: \"icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), \"TRAILER\"))), React.createElement(Col, {\n      sm: 6,\n      id: \"modalStats\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, this.renderPoster()), React.createElement(\"div\", {\n      id: \"statLine\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"stats\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Genres\"), this.getGenres()), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Rating\"), this.props.data.vote_average, \" / 10\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Release\"), this.props.data.release_date), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Revenue\"), this.formatRevenue())))))));\n  }\n\n}\n\nexport default MovieModal;","map":{"version":3,"sources":["/Users/sikidamjanovic/Documents/GitHub/react-movie-database/src/components/MovieModal.js"],"names":["React","Component","Modal","IoIosStar","IoMdTime","IoIosPlay","Container","Row","Col","setAppElement","MovieModal","constructor","props","closeModal","bind","isOpen","getGenres","genres","data","string","i","length","name","substring","formatRevenue","x","revenue","toString","replace","renderPoster","poster","poster_path","render","backdrop_path","title","overview","vote_average","release_date"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Modal from 'react-modal'\nimport { IoIosStar, IoMdTime, IoIosPlay } from 'react-icons/io'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport '../css/modal.css'\n  \nModal.setAppElement('#root')\n\nclass MovieModal extends Component {\n\n    constructor(props) {\n        super(props)\n        this.closeModal = this.closeModal.bind(this);\n    }\n\n    closeModal(){\n        return this.props.isOpen\n    }\n\n    getGenres(){\n        var genres = this.props.data.genres\n        if(genres){\n            var string = ''\n            for (let i = 0; i < genres.length; i++) {\n                string += genres[i].name + ' / '\n            }\n            return string.substring(0, string.length - 2)\n        }else{\n            return 'Unknown'\n        }\n    }\n\n    formatRevenue(){\n        var x = this.props.data.revenue\n        if(x){\n            return '$' + x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n        }else{\n            return 'Unknown'\n        }\n    }\n\n    renderPoster(){\n        var poster = this.props.data.poster_path\n        if(poster){\n            return(\n                <img \n                    id=\"modalPoster\" \n                    src={\"https://image.tmdb.org/t/p/w500\" + this.props.data.poster_path} \n                    alt=\"poster\">    \n                </img>\n            )\n        }else{\n            return <div></div>\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <Modal\n                    isOpen={this.props.isOpen}\n                    onRequestClose={this.closeModal}\n                    id=\"modal\"\n                >\n                    <button id=\"button\" onClick={this.closeModal}>X</button>\n                    \n                    <img \n                        src={\"https://image.tmdb.org/t/p/original/\" + this.props.data.backdrop_path} \n                        id=\"bgImage\"\n                        alt='bg'\n                    />\n\n                    <Container id=\"modalContainer\">\n                        <Row id=\"modalRow\">\n\n                            <Col sm={6} id=\"modalInfo\">\n                                <h1>{this.props.data.title}</h1>\n                                <div>\n                                    <p>{this.props.data.overview}</p>\n                                    <button>\n                                        <IoIosPlay className=\"icon\"/>\n                                        TRAILER\n                                    </button>\n                                </div>\n                            </Col>\n\n                            <Col sm={6} id=\"modalStats\">\n                                <div>\n                                    {this.renderPoster()}\n                                </div>\n                                <div id=\"statLine\"></div>\n                                <div id=\"stats\">   \n                                    <p><span>Genres</span>{this.getGenres()}</p>\n                                    <p><span>Rating</span>{this.props.data.vote_average} / 10</p>\n                                    <p><span>Release</span>{this.props.data.release_date}</p>\n                                    <p><span>Revenue</span>{this.formatRevenue()}</p>       \n                                </div>\n                            </Col>\n                        </Row>\n                    </Container>\n\n                </Modal>\n            </div>\n        );\n    }\n\n  }\n\nexport default MovieModal"]},"metadata":{},"sourceType":"module"}