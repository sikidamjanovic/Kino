{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = whilst;\n\nvar noop = function noop() {};\n/**\n * Repeatedly call fn, while test returns true. Calls callback when stopped, or an error occurs.\n *\n * @param {Function} test Synchronous truth test to perform before each execution of fn.\n * @param {Function} fn A function which is called each time test passes. The function is passed a callback(err), which must be called once it has completed with an optional err argument.\n * @param {Function} callback A callback which is called after the test fails and repeated execution of fn has stopped.\n */\n\n\nfunction whilst(test, iterator) {\n  var callback = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : noop;\n\n  if (test()) {\n    iterator(function next(err) {\n      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      if (err) {\n        callback(err);\n      } else if (test.apply(this, args)) {\n        iterator(next);\n      } else {\n        callback(null);\n      }\n    });\n  } else {\n    callback(null);\n  }\n}","map":null,"metadata":{},"sourceType":"script"}