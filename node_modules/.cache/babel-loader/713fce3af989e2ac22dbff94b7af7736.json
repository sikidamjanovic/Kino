{"ast":null,"code":"import _classCallCheck from \"/Users/sikidamjanovic/Documents/GitHub/Kino-Movie/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sikidamjanovic/Documents/GitHub/Kino-Movie/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sikidamjanovic/Documents/GitHub/Kino-Movie/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sikidamjanovic/Documents/GitHub/Kino-Movie/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sikidamjanovic/Documents/GitHub/Kino-Movie/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/sikidamjanovic/Documents/GitHub/Kino-Movie/src/containers/MovieFull.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport '../css/movie-full.css';\nimport '../css/main.css';\nimport { Grid, Row, Col, Clearfix } from 'react-bootstrap';\nimport ReactStars from 'react-stars';\nimport { render } from 'react-dom';\nimport Search from '../components/Search';\nimport Recommender from '../containers/Recommender';\nimport myDataset from '../movie_titles.csv';\nimport { Link } from 'react-router';\nimport logo from '../img/kino3.png';\nimport x from '../img/x.png';\nimport check from '../img/check.png'; // import Palette from 'react-palette'\n\nimport NavDrawer from '../components/NavDrawer';\nimport { cpus } from 'os';\n\nvar ratingChanged = function ratingChanged(newRating) {\n  console.log(newRating);\n};\n\nvar MovieFull =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MovieFull, _Component);\n\n  function MovieFull(props) {\n    var _this;\n\n    _classCallCheck(this, MovieFull);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MovieFull).call(this, props));\n    _this.state = {\n      requestFailed: false\n    };\n    return _this;\n  }\n\n  _createClass(MovieFull, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch('https://api.themoviedb.org/3/movie/' + this.props.params.id + '?api_key=17c21a1abd8ae7be6ee8986389011906').then(function (response) {\n        if (!response.ok) {\n          throw Error(\"Network request failed\");\n        }\n\n        return response;\n      }).then(function (d) {\n        return d.json();\n      }).then(function (d) {\n        _this2.setState({\n          movieData: d\n        });\n      }, function () {\n        _this2.setState({\n          requestFailed: true\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.requestFailed) return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"Failed!\");\n      if (!this.state.movieData) return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"Loading...\");\n      var rating = this.state.movieData.vote_average / 2;\n      var title = this.state.movieData.title;\n      return React.createElement(\"div\", {\n        className: \"movie-full-page\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"movie-full-backdrop\",\n        src: \"https://image.tmdb.org/t/p/w1280\" + this.state.movieData.backdrop_path,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), React.createElement(Grid, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(NavDrawer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"Kino\")), React.createElement(Col, {\n        sm: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(Search, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: 6,\n        smOffset: 0,\n        xsOffset: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"image-parent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"movie-full-image\",\n        src: \"https://image.tmdb.org/t/p/w500\" + this.state.movieData.poster_path,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }))), React.createElement(Col, {\n        sm: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"movie-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"movie-full-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, this.state.movieData.title), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: \"movie-full-genres\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, this.state.movieData.genres[0].name, \" | \", this.state.movieData.runtime, \" Minutes | \", this.state.movieData.release_date), React.createElement(\"p\", {\n        className: \"movie-full-overview\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, this.state.movieData.overview), React.createElement(Link, {\n        to: {\n          pathname: \"/Recommender/\".concat(this.state.movieData.id)\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"recom-button\",\n        onClick: \"reload()\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"Recommendations\")))))));\n    }\n  }]);\n\n  return MovieFull;\n}(Component);\n\nexport default MovieFull;","map":{"version":3,"sources":["/Users/sikidamjanovic/Documents/GitHub/Kino-Movie/src/containers/MovieFull.js"],"names":["React","Component","PropTypes","Grid","Row","Col","Clearfix","ReactStars","render","Search","Recommender","myDataset","Link","logo","x","check","NavDrawer","cpus","ratingChanged","newRating","console","log","MovieFull","props","state","requestFailed","fetch","params","id","then","response","ok","Error","d","json","setState","movieData","rating","vote_average","title","backdrop_path","poster_path","genres","name","runtime","release_date","overview","pathname"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport PropTypes from 'prop-types'\nimport '../css/movie-full.css';\nimport '../css/main.css';\nimport {Grid, Row, Col, Clearfix} from 'react-bootstrap'\nimport ReactStars from 'react-stars'\nimport { render } from 'react-dom'\nimport Search from '../components/Search'\nimport Recommender from '../containers/Recommender'\nimport myDataset from '../movie_titles.csv';\nimport {Link} from 'react-router'\nimport logo from '../img/kino3.png'\nimport x from '../img/x.png'\nimport check from '../img/check.png'\n// import Palette from 'react-palette'\nimport NavDrawer from '../components/NavDrawer'\nimport { cpus } from 'os';\n\nconst ratingChanged = (newRating) => {\n  console.log(newRating)\n}\n\nclass MovieFull extends Component{\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      requestFailed: false\n    }\n  }\n\n  componentDidMount() {\n    fetch('https://api.themoviedb.org/3/movie/' + this.props.params.id + '?api_key=17c21a1abd8ae7be6ee8986389011906')\n      .then(response => {\n        if (!response.ok) {\n          throw Error(\"Network request failed\")\n        }\n        return response\n      })\n      .then(d => d.json())\n      .then(d => {\n        this.setState({\n          movieData: d\n        })\n      }, () => {\n        this.setState({\n          requestFailed: true\n        })\n      })\n  }\n\n\n  render () {\n\n    if (this.state.requestFailed) return <p>Failed!</p>\n    if (!this.state.movieData) return <p>Loading...</p>\n\n    var rating = (this.state.movieData.vote_average)/2\n    var title = (this.state.movieData.title)\n\n    return (\n      <div className=\"movie-full-page\">\n      <img className=\"movie-full-backdrop\"src={\"https://image.tmdb.org/t/p/w1280\" + this.state.movieData.backdrop_path}/>\n        <Grid>\n            <Row>\n                <Col sm={6}>\n                    <NavDrawer/>\n                    <p>Kino</p>\n                </Col>\n                <Col sm={6}>\n                    <Search/>\n                </Col>\n            </Row>\n            <Row>\n                <Col sm={6} smOffset={0} xsOffset={2}>\n                    <div className=\"image-parent\">\n                        <img className=\"movie-full-image\"src={\"https://image.tmdb.org/t/p/w500\" + this.state.movieData.poster_path}/>\n                    </div>\n                </Col>\n                <Col sm={6}>\n                    <div className=\"movie-info\">\n                        <h1 className=\"movie-full-title\">{this.state.movieData.title}</h1><br></br>\n                        <p className=\"movie-full-genres\" >{this.state.movieData.genres[0].name} | {this.state.movieData.runtime} Minutes | {this.state.movieData.release_date}</p>\n                        <p className=\"movie-full-overview\">{this.state.movieData.overview}</p>\n                        <Link to= {{pathname: `/Recommender/${this.state.movieData.id}`}}>\n                            <p className=\"recom-button\" onClick='reload()'>Recommendations</p>\n                        </Link>\n                    </div>\n                </Col>\n            </Row>\n        </Grid>\n      </div>\n    )\n  }\n}\n\nexport default MovieFull\n"]},"metadata":{},"sourceType":"module"}