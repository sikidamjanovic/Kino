{"ast":null,"code":"import _classCallCheck from \"/Users/sikidamjanovic/Documents/GitHub/Kino-Movie/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sikidamjanovic/Documents/GitHub/Kino-Movie/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sikidamjanovic/Documents/GitHub/Kino-Movie/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sikidamjanovic/Documents/GitHub/Kino-Movie/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sikidamjanovic/Documents/GitHub/Kino-Movie/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/sikidamjanovic/Documents/GitHub/Kino-Movie/src/components/Movie.js\";\nimport React, { Component } from 'react';\nimport '../css/movie.css';\nimport { Link } from 'react-router';\nimport ReactStars from 'react-stars';\nimport { Grid, Row, Col, Clearfix, Alert } from 'react-bootstrap';\n\nvar Loader = require('react-loaders').Loader;\n\nvar Movie =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Movie, _Component);\n\n  function Movie(props) {\n    var _this;\n\n    _classCallCheck(this, Movie);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Movie).call(this, props));\n    _this.state = {\n      requestFailed: false\n    };\n    return _this;\n  }\n\n  _createClass(Movie, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch('https://api.themoviedb.org/3/movie/' + this.props.id + '?api_key=17c21a1abd8ae7be6ee8986389011906').then(function (response) {\n        if (!response.ok) {\n          throw Error(\"Network request failed\");\n        }\n\n        return response;\n      }).then(function (d) {\n        return d.json();\n      }).then(function (d) {\n        _this2.setState({\n          movieData: d\n        });\n      }, function () {\n        _this2.setState({\n          requestFailed: true\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      {\n        /* Page needs to render something while data is loading, or else it renders a blank page*/\n      }\n      if (this.state.requestFailed) return React.createElement(Loader, {\n        type: \"line-scale\",\n        active: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      });\n      if (!this.state.movieData) return React.createElement(Loader, {\n        type: \"line-scale\",\n        active: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      });\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: {\n          pathname: \"/MovieFull/\".concat(this.props.id)\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"imgContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"movieImg\",\n        src: \"https://image.tmdb.org/t/p/w200\" + this.state.movieData.poster_path,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }))), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"overflow-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        className: \"movieTitle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, this.state.movieData.title))), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"movieGenre\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, this.state.movieData.genres[0].name, \" - \", this.state.movieData.genres[1].name)), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(ReactStars, {\n        count: 5,\n        value: this.state.movieData.vote_average / 2,\n        size: 10,\n        className: 'stars',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: \"movieRating\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, this.state.movieData.vote_average, \" / 10 \"))))));\n    }\n  }]);\n\n  return Movie;\n}(Component);\n\nexport default Movie;","map":{"version":3,"sources":["/Users/sikidamjanovic/Documents/GitHub/Kino-Movie/src/components/Movie.js"],"names":["React","Component","Link","ReactStars","Grid","Row","Col","Clearfix","Alert","Loader","require","Movie","props","state","requestFailed","fetch","id","then","response","ok","Error","d","json","setState","movieData","pathname","poster_path","title","genres","name","vote_average"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,kBAAP;AACA,SAAQC,IAAR,QAAmB,cAAnB;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,SAASC,IAAT,EAAeC,GAAf,EAAoBC,GAApB,EAAyBC,QAAzB,EAAmCC,KAAnC,QAAgD,iBAAhD;;AACA,IAAIC,MAAM,GAAGC,OAAO,CAAC,eAAD,CAAP,CAAyBD,MAAtC;;IAEME,K;;;;;AAEF,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,+EAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,aAAa,EAAE;AADN,KAAb;AAFe;AAKlB;;;;wCAEmB;AAAA;;AAChBC,MAAAA,KAAK,CAAC,wCAAwC,KAAKH,KAAL,CAAWI,EAAnD,GAAwD,2CAAzD,CAAL,CACKC,IADL,CACU,UAAAC,QAAQ,EAAI;AACd,YAAI,CAACA,QAAQ,CAACC,EAAd,EAAkB;AACd,gBAAMC,KAAK,CAAC,wBAAD,CAAX;AACH;;AACD,eAAOF,QAAP;AACH,OANL,EAOKD,IAPL,CAOU,UAAAI,CAAC;AAAA,eAAIA,CAAC,CAACC,IAAF,EAAJ;AAAA,OAPX,EAQKL,IARL,CAQU,UAAAI,CAAC,EAAI;AACP,QAAA,MAAI,CAACE,QAAL,CAAc;AAAEC,UAAAA,SAAS,EAAEH;AAAb,SAAd;AACH,OAVL,EAUO,YAAM;AACL,QAAA,MAAI,CAACE,QAAL,CAAc;AAAET,UAAAA,aAAa,EAAE;AAAjB,SAAd;AACH,OAZL;AAaH;;;6BAEQ;AACL;AAAC;AAA2F;AAC5F,UAAI,KAAKD,KAAL,CAAWC,aAAf,EAA8B,OAAO,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,YAAb;AAA0B,QAAA,MAAM,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AAC9B,UAAI,CAAC,KAAKD,KAAL,CAAWW,SAAhB,EAA2B,OAAO,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,YAAb;AAA0B,QAAA,MAAM,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AAC3B,aACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAE;AAAEC,UAAAA,QAAQ,uBAAgB,KAAKb,KAAL,CAAWI,EAA3B;AAAV,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACQ;AAAK,QAAA,SAAS,EAAC,UAAf;AAA0B,QAAA,GAAG,EAAE,oCAAoC,KAAKH,KAAL,CAAWW,SAAX,CAAqBE,WAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADR,CADJ,CAFJ,EAQI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA4B,KAAKb,KAAL,CAAWW,SAAX,CAAqBG,KAAjD,CADJ,CADJ,CARJ,EAcI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAG,QAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA2B,KAAKd,KAAL,CAAWW,SAAX,CAAqBI,MAArB,CAA4B,CAA5B,EAA+BC,IAA1D,SAAmE,KAAKhB,KAAL,CAAWW,SAAX,CAAqBI,MAArB,CAA4B,CAA5B,EAA+BC,IAAlG,CADJ,CAdJ,EAkBI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,UAAD;AACI,QAAA,KAAK,EAAE,CADX;AAEI,QAAA,KAAK,EAAE,KAAKhB,KAAL,CAAWW,SAAX,CAAqBM,YAArB,GAAoC,CAF/C;AAGI,QAAA,IAAI,EAAE,EAHV;AAII,QAAA,SAAS,EAAE,OAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAOI;AAAG,QAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA4B,KAAKjB,KAAL,CAAWW,SAAX,CAAqBM,YAAjD,WAPJ,CAlBJ,CADJ,CADJ,CADJ,CADJ;AAoCH;;;;EAjEe7B,S;;AAmEpB,eAAeU,KAAf","sourcesContent":["import React, { Component } from 'react';\nimport '../css/movie.css';\nimport {Link} from 'react-router'\nimport ReactStars from 'react-stars'\nimport { Grid, Row, Col, Clearfix, Alert } from 'react-bootstrap';\nvar Loader = require('react-loaders').Loader;\n\nclass Movie extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            requestFailed: false\n        }\n    }\n\n    componentDidMount() {\n        fetch('https://api.themoviedb.org/3/movie/' + this.props.id + '?api_key=17c21a1abd8ae7be6ee8986389011906')\n            .then(response => {\n                if (!response.ok) {\n                    throw Error(\"Network request failed\")\n                }\n                return response\n            })\n            .then(d => d.json())\n            .then(d => {\n                this.setState({ movieData: d })\n            }, () => {\n                this.setState({ requestFailed: true })\n            })\n    }\n\n    render() {\n        {/* Page needs to render something while data is loading, or else it renders a blank page*/}\n        if (this.state.requestFailed) return <Loader type=\"line-scale\" active />\n        if (!this.state.movieData) return <Loader type=\"line-scale\" active />\n        return (\n            <div className=\"container\">\n                <Link to={{ pathname: `/MovieFull/${this.props.id}`}}>\n                    <Grid>\n                        <Row>\n                            {/* Movie poster image with container */}\n                            <Col>\n                                <div className=\"imgContainer\">\n                                        <img className=\"movieImg\" src={\"https://image.tmdb.org/t/p/w200\" + this.state.movieData.poster_path}/>\n                                </div>\n                            </Col>\n                            {/* Movie title with overflow container to fit text within div */}\n                            <Col>\n                                <div className=\"overflow-container\">\n                                    <h4 className=\"movieTitle\">{this.state.movieData.title}</h4>\n                                </div>\n                            </Col>\n                            {/* Movie genres (primary and secondary) */}\n                            <Col>\n                                <p className=\"movieGenre\">{this.state.movieData.genres[0].name} - {this.state.movieData.genres[1].name}</p>\n                            </Col>\n                            {/* React library for stars which uses the movies rating / 2 (since stars are out of 5 and rating is out of 10) */}    \n                            <Col>\n                                <ReactStars\n                                    count={5}\n                                    value={this.state.movieData.vote_average / 2}\n                                    size={10}\n                                    className={'stars'}\n                                />\n                                <p className=\"movieRating\">{this.state.movieData.vote_average} / 10 </p>\n                            </Col>\n                        </Row>\n                    </Grid>\n                </Link>\n            </div>\n        )\n    }\n}\nexport default Movie;\n"]},"metadata":{},"sourceType":"module"}