{"ast":null,"code":"var _jsxFileName = \"/Users/sikidamjanovic/Documents/GitHub/react-movie-database/src/components/MovieCard.js\";\nimport React, { Component } from 'react';\nimport { Palette } from 'react-palette';\nimport { MdStar, MdPlayArrow } from 'react-icons/md';\nimport { CSSTransitionGroup } from 'react-transition-group';\nimport '../css/movie-card.css';\n\nclass MovieCard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: [],\n      loaded: false\n    };\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  fetchData() {\n    fetch('https://api.themoviedb.org/3/movie/' + this.props.id + '?api_key=17c21a1abd8ae7be6ee8986389011906').then(response => {\n      if (!response.ok) {\n        throw Error(\"Network request failed\");\n      }\n\n      return response;\n    }).then(d => d.json()).then(d => {\n      this.setState({\n        data: d,\n        loaded: true\n      });\n    });\n  }\n\n  renderPoster() {\n    var loaded = this.state.loaded;\n\n    if (loaded) {\n      var poster = this.state.data.poster_path;\n\n      if (poster) {\n        return React.createElement(\"img\", {\n          src: \"https://image.tmdb.org/t/p/w500\" + poster,\n          alt: \"poster\",\n          id: \"poster\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        });\n      } else {\n        return React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, \"No Image, Sorry.\");\n      }\n    } else {\n      return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"No Image, Sorry.\");\n    }\n  }\n\n  renderLine() {\n    var path = this.state.data.poster_path;\n    return React.createElement(Palette, {\n      src: \"https://image.tmdb.org/t/p/w500\" + path,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, ({\n      data,\n      loading,\n      error\n    }) => React.createElement(\"div\", {\n      style: {\n        backgroundColor: data.vibrant\n      },\n      id: \"line\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }));\n  }\n\n  renderInfo() {\n    var loaded = this.state.loaded;\n    var data = this.state.data;\n\n    if (loaded) {\n      return React.createElement(\"div\", {\n        id: \"info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"line-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, this.renderLine()), React.createElement(\"div\", {\n        id: \"info-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"title-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        id: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, data.title)), React.createElement(\"div\", {\n        id: \"buttons-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \" \", data.release_date.substring(0, 4)), React.createElement(\"p\", {\n        className: \"button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(MdStar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }), data.vote_average), React.createElement(\"p\", {\n        className: \"button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(MdPlayArrow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }), \"TRAILER\"))));\n    }\n  }\n\n  render() {\n    return React.createElement(CSSTransitionGroup, {\n      transitionName: \"example\",\n      transitionEnterTimeout: 10000,\n      transitionLeaveTimeout: 300,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"movie-card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, this.renderPoster(), this.renderInfo())));\n  }\n\n}\n\nexport default MovieCard;","map":{"version":3,"sources":["/Users/sikidamjanovic/Documents/GitHub/react-movie-database/src/components/MovieCard.js"],"names":["React","Component","Palette","MdStar","MdPlayArrow","CSSTransitionGroup","MovieCard","state","data","loaded","componentDidMount","fetchData","fetch","props","id","then","response","ok","Error","d","json","setState","renderPoster","poster","poster_path","renderLine","path","loading","error","backgroundColor","vibrant","renderInfo","title","release_date","substring","vote_average","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Palette } from 'react-palette'\nimport { MdStar, MdPlayArrow } from 'react-icons/md'\nimport { CSSTransitionGroup } from 'react-transition-group'\nimport '../css/movie-card.css'\n\nclass MovieCard extends Component {\n\n    state = {\n        data: [],\n        loaded: false\n    }\n\n    componentDidMount(){\n        this.fetchData()\n    }\n\n    fetchData(){\n        fetch('https://api.themoviedb.org/3/movie/' + this.props.id + '?api_key=17c21a1abd8ae7be6ee8986389011906')\n        .then(response => {\n            if (!response.ok) {\n                throw Error(\"Network request failed\")\n            }\n            return response\n        })\n        .then(d => d.json())\n        .then(d => {\n            this.setState({\n                data: d,\n                loaded: true\n            })\n        })\n    }\n\n    renderPoster(){\n        var loaded = this.state.loaded\n        if(loaded){\n            var poster = this.state.data.poster_path\n            if(poster){\n                return <img \n                            src={\"https://image.tmdb.org/t/p/w500\" + poster} \n                            alt=\"poster\" \n                            id=\"poster\"\n                        />\n            }else{\n                return <p>No Image, Sorry.</p>\n            }\n        }else{\n            return <p>No Image, Sorry.</p>\n        }\n    }\n\n    renderLine(){\n        var path = this.state.data.poster_path\n        return(\n            <Palette src={\"https://image.tmdb.org/t/p/w500\" + path}>\n                {({ data, loading, error }) => (\n                    <div style={{ backgroundColor: data.vibrant }}id=\"line\"></div>\n                )}\n            </Palette>\n        )\n    }\n\n    renderInfo(){\n        var loaded = this.state.loaded\n        var data = this.state.data\n\n        if(loaded){\n            return(\n                <div id=\"info\">    \n                    <div id=\"line-container\">\n                        {this.renderLine()}\n                    </div>\n                    <div id=\"info-container\">\n                        <div id=\"title-container\">\n                            <p id=\"title\">{data.title}</p>\n                        </div>\n                        <div id=\"buttons-container\">\n                            <p className=\"button\"> {data.release_date.substring(0, 4)}</p>\n                            <p className=\"button\">\n                                <MdStar/>\n                                {data.vote_average}\n                            </p>\n                            <p className=\"button\">\n                                <MdPlayArrow/>\n                                TRAILER\n                            </p>\n                        </div>\n                    </div>\n                </div>\n            )\n        }\n    }\n\n    render() {\n        return (\n            <CSSTransitionGroup\n            transitionName=\"example\"\n            transitionEnterTimeout={10000}\n            transitionLeaveTimeout={300}>\n                <div id=\"movie-card\">\n                    <div>\n                        {this.renderPoster()}\n                        {this.renderInfo()}\n                    </div>\n                </div>\n            </CSSTransitionGroup>\n        );\n    }\n}\n\nexport default MovieCard;"]},"metadata":{},"sourceType":"module"}