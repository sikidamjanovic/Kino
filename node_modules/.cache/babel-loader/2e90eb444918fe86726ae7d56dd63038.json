{"ast":null,"code":"var _jsxFileName = \"/Users/sikidamjanovic/Documents/GitHub/react-movie-database/src/containers/Home.js\";\nimport React, { Component } from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport MovieCard from '../components/MovieCard';\nimport { FaSearch } from 'react-icons/fa';\nimport '../css/main.css';\nimport kinoLogo from '../img/logo.png';\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      query: 'john',\n      loaded: false,\n      error: false,\n      input: ''\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  componentDidUpdate(prevState, snapshot) {\n    if (this.state.query !== prevState.query) {\n      console.log(prevState.query);\n    }\n  }\n\n  handleChange(e) {\n    console.log('changing');\n    this.setState({\n      input: e.target.value\n    });\n  }\n\n  handleSubmit(e) {\n    console.log('submitted');\n    e.preventDefault();\n    this.setState({\n      data: [],\n      query: this.state.input\n    });\n  }\n\n  fetchData() {\n    console.log('fetching'); //Api call based on user query\n\n    fetch('https://api.themoviedb.org/3/search/movie?api_key=17c21a1abd8ae7be6ee8986389011906&query=' + this.state.query).then(response => {\n      if (!response.ok) {\n        throw response;\n      }\n\n      return response.json();\n    }) //Store data in state\n    .then(json => {\n      this.setState({\n        loaded: true,\n        error: false,\n        data: json.results\n      });\n    }) //Catches API limit errors, reloads page until limit resets\n    .catch(err => {\n      if (err.status === '429') {\n        console.log('Error 429');\n        this.setState({\n          error: true\n        });\n        this.fetchData();\n      }\n    });\n  }\n\n  renderHeader() {\n    return React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: kinoLogo,\n      alt: \"kino\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Showing results for '\", this.state.query, \"'\"), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Search movies\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      id: \"search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(FaSearch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }))))));\n  }\n\n  renderMovies() {\n    var data = this.state.data;\n    var loaded = this.state.loaded; //If API call was succesfull and component has data, return grid of movies\n\n    if (loaded) {\n      return React.createElement(Row, {\n        className: \"movie-feed-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, data.map((item, i) => React.createElement(Col, {\n        sm: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(MovieCard, {\n        id: data[i].id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }))));\n    } //TODO: Return placeholder for movie loading \n    else {\n        return React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }, \"Loading...\");\n      }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"app\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, this.renderHeader(), this.renderMovies()));\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/sikidamjanovic/Documents/GitHub/react-movie-database/src/containers/Home.js"],"names":["React","Component","Container","Row","Col","MovieCard","FaSearch","kinoLogo","Home","constructor","props","state","data","query","loaded","error","input","handleSubmit","bind","handleChange","componentDidMount","fetchData","componentDidUpdate","prevState","snapshot","console","log","e","setState","target","value","preventDefault","fetch","then","response","ok","json","results","catch","err","status","renderHeader","renderMovies","map","item","i","id","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,QAAoC,iBAApC;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,OAAO,iBAAP;AACA,OAAOC,QAAP,MAAqB,iBAArB;;AAEA,MAAMC,IAAN,SAAmBP,SAAnB,CAA6B;AAEzBQ,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE,EADG;AAETC,MAAAA,KAAK,EAAE,MAFE;AAGTC,MAAAA,MAAM,EAAE,KAHC;AAITC,MAAAA,KAAK,EAAE,KAJE;AAKTC,MAAAA,KAAK,EAAE;AALE,KAAb;AAOA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACH;;AAEDE,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,SAAL;AACH;;AAEDC,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,QAAZ,EAAqB;AACnC,QAAG,KAAKb,KAAL,CAAWE,KAAX,KAAqBU,SAAS,CAACV,KAAlC,EAAwC;AACpCY,MAAAA,OAAO,CAACC,GAAR,CAAYH,SAAS,CAACV,KAAtB;AACH;AACJ;;AAEDM,EAAAA,YAAY,CAACQ,CAAD,EAAG;AACXF,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACA,SAAKE,QAAL,CAAc;AAAEZ,MAAAA,KAAK,EAAEW,CAAC,CAACE,MAAF,CAASC;AAAlB,KAAd;AACH;;AAEDb,EAAAA,YAAY,CAACU,CAAD,EAAG;AACXF,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAC,IAAAA,CAAC,CAACI,cAAF;AACA,SAAKH,QAAL,CAAc;AAAEhB,MAAAA,IAAI,EAAE,EAAR;AAAYC,MAAAA,KAAK,EAAE,KAAKF,KAAL,CAAWK;AAA9B,KAAd;AACH;;AAEDK,EAAAA,SAAS,GAAE;AACPI,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EADO,CAEP;;AACAM,IAAAA,KAAK,CAAC,8FAA6F,KAAKrB,KAAL,CAAWE,KAAzG,CAAL,CACCoB,IADD,CACOC,QAAQ,IAAI;AACf,UAAI,CAACA,QAAQ,CAACC,EAAd,EAAkB;AAAE,cAAMD,QAAN;AAAgB;;AACpC,aAAOA,QAAQ,CAACE,IAAT,EAAP;AACH,KAJD,EAKA;AALA,KAMCH,IAND,CAMOG,IAAI,IAAI;AACX,WAAKR,QAAL,CAAc;AAACd,QAAAA,MAAM,EAAC,IAAR;AAAcC,QAAAA,KAAK,EAAC,KAApB;AAA2BH,QAAAA,IAAI,EAAEwB,IAAI,CAACC;AAAtC,OAAd;AACH,KARD,EASA;AATA,KAUCC,KAVD,CAUQC,GAAG,IAAI;AACX,UAAGA,GAAG,CAACC,MAAJ,KAAe,KAAlB,EAAwB;AACpBf,QAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACA,aAAKE,QAAL,CAAc;AAACb,UAAAA,KAAK,EAAC;AAAP,SAAd;AACA,aAAKM,SAAL;AACH;AACJ,KAhBD;AAiBH;;AAEDoB,EAAAA,YAAY,GAAE;AACV,WACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,EAAE,EAAC,QAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,GAAG,EAAElC,QAAV;AAAoB,MAAA,GAAG,EAAC,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAA0B,KAAKI,KAAL,CAAWE,KAArC,MAFJ,EAGI;AAAM,MAAA,QAAQ,EAAE,KAAKI,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,WAAW,EAAC,eAFhB;AAGI,MAAA,QAAQ,EAAE,KAAKE,YAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAMI;AACI,MAAA,IAAI,EAAC,QADT;AAEI,MAAA,EAAE,EAAC,QAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAII,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CANJ,CAHJ,CADJ,CADJ,CADJ;AAuBH;;AAEDuB,EAAAA,YAAY,GAAE;AACV,QAAI9B,IAAI,GAAG,KAAKD,KAAL,CAAWC,IAAtB;AACA,QAAIE,MAAM,GAAG,KAAKH,KAAL,CAAWG,MAAxB,CAFU,CAGV;;AACA,QAAGA,MAAH,EAAU;AACN,aACI,oBAAC,GAAD;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKF,IAAI,CAAC+B,GAAL,CAAS,CAACC,IAAD,EAAOC,CAAP,KACF,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD;AAAW,QAAA,EAAE,EAAEjC,IAAI,CAACiC,CAAD,CAAJ,CAAQC,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADP,CADL,CADJ;AASH,KAVD,CAWA;AAXA,SAYI;AACA,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAP;AACH;AACJ;;AAEDC,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,EAAE,EAAC,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKN,YAAL,EADL,EAEK,KAAKC,YAAL,EAFL,CADJ,CADJ;AAQH;;AAlHwB;;AAqH7B,eAAelC,IAAf","sourcesContent":["import React, { Component } from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport MovieCard from '../components/MovieCard'\nimport { FaSearch } from 'react-icons/fa'\nimport '../css/main.css'\nimport kinoLogo from '../img/logo.png'\n\nclass Home extends Component {\n    \n    constructor(props){\n        super(props);\n        this.state = {\n            data: [],\n            query: 'john',\n            loaded: false,\n            error: false,\n            input: ''\n        }\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.handleChange = this.handleChange.bind(this)\n    }\n\n    componentDidMount() {\n        this.fetchData()\n    }\n\n    componentDidUpdate(prevState, snapshot){\n        if(this.state.query !== prevState.query){\n            console.log(prevState.query)\n        }\n    }\n\n    handleChange(e){\n        console.log('changing')\n        this.setState({ input: e.target.value})\n    }\n\n    handleSubmit(e){\n        console.log('submitted')\n        e.preventDefault()\n        this.setState({ data: [], query: this.state.input })\n    }\n\n    fetchData(){\n        console.log('fetching')\n        //Api call based on user query\n        fetch('https://api.themoviedb.org/3/search/movie?api_key=17c21a1abd8ae7be6ee8986389011906&query='+ this.state.query)\n        .then( response => {\n            if (!response.ok) { throw response }\n            return response.json() \n        })\n        //Store data in state\n        .then( json => {\n            this.setState({loaded:true, error:false, data: json.results}) \n        })\n        //Catches API limit errors, reloads page until limit resets\n        .catch( err => {\n            if(err.status === '429'){\n                console.log('Error 429')\n                this.setState({error:true})\n                this.fetchData()\n            }\n        })\n    }\n\n    renderHeader(){\n        return(\n            <Row>\n                <Col>\n                    <div id=\"header\">\n                        <img src={kinoLogo} alt=\"kino\"></img>\n                        <h1>Showing results for '{this.state.query}'</h1>\n                        <form onSubmit={this.handleSubmit}>\n                            <input \n                                type=\"text\"\n                                placeholder=\"Search movies\"\n                                onChange={this.handleChange}\n                            />\n                            <button \n                                type=\"submit\" \n                                id=\"search\"\n                            >\n                                <FaSearch/>\n                            </button>\n                        </form>\n                    </div>\n                </Col>\n            </Row>\n        )\n    }\n\n    renderMovies(){\n        var data = this.state.data\n        var loaded = this.state.loaded\n        //If API call was succesfull and component has data, return grid of movies\n        if(loaded){\n            return (\n                <Row className=\"movie-feed-row\">\n                    {data.map((item, i) => (\n                            <Col sm={3}>\n                                <MovieCard id={data[i].id}/>\n                            </Col>\n                    ))}\n                </Row>\n            )\n        }\n        //TODO: Return placeholder for movie loading \n        else{\n            return <p>Loading...</p>\n        }\n    }\n\n    render() {\n        return (\n            <div id=\"app\">\n                <Container>\n                    {this.renderHeader()}\n                    {this.renderMovies()}\n                </Container>\n            </div>\n        );\n    }\n}\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}