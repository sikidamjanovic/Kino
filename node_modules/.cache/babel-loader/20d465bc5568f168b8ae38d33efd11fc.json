{"ast":null,"code":"import _classCallCheck from \"/Users/sikidamjanovic/Documents/GitHub/Kino-Movie/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sikidamjanovic/Documents/GitHub/Kino-Movie/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sikidamjanovic/Documents/GitHub/Kino-Movie/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sikidamjanovic/Documents/GitHub/Kino-Movie/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sikidamjanovic/Documents/GitHub/Kino-Movie/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/sikidamjanovic/Documents/GitHub/Kino-Movie/src/containers/MovieFull.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport '../css/movie-full.css';\nimport '../css/main.css';\nimport { Grid, Row, Col, Clearfix } from 'react-bootstrap';\nimport ReactStars from 'react-stars';\nimport Search from '../components/Search';\nimport { Link } from 'react-router';\nimport logo from '../img/kino3.png';\nimport Palette from 'react-palette';\nimport NavDrawer from '../components/NavDrawer';\n\nvar ratingChanged = function ratingChanged(newRating) {\n  console.log(newRating);\n};\n\nvar MovieFull =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MovieFull, _Component);\n\n  function MovieFull(props) {\n    var _this;\n\n    _classCallCheck(this, MovieFull);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MovieFull).call(this, props));\n    _this.state = {\n      requestFailed: false\n    };\n    return _this;\n  }\n\n  _createClass(MovieFull, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch('https://api.themoviedb.org/3/movie/' + this.props.params.id + '?api_key=17c21a1abd8ae7be6ee8986389011906').then(function (response) {\n        if (!response.ok) {\n          throw Error(\"Network request failed\");\n        }\n\n        return response;\n      }).then(function (d) {\n        return d.json();\n      }).then(function (d) {\n        _this2.setState({\n          movieData: d\n        });\n      }, function () {\n        _this2.setState({\n          requestFailed: true\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      if (this.state.requestFailed) return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"Failed!\");\n      if (!this.state.movieData) return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Loading...\");\n      var rating = this.state.movieData.vote_average / 2;\n      var title = this.state.movieData.title;\n      return React.createElement(\"div\", {\n        className: \"movie-full-page\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"movie-full-backdrop\",\n        src: \"https://image.tmdb.org/t/p/w1280\" + this.state.movieData.backdrop_path,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }), React.createElement(\"img\", {\n        className: \"logo-img-full\",\n        src: logo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }), React.createElement(Palette, {\n        image: \"https://image.tmdb.org/t/p/w1280\" + this.state.movieData.backdrop_path,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, function (palette) {\n        return React.createElement(Grid, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, React.createElement(Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, React.createElement(Col, {\n          sm: 6,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, React.createElement(NavDrawer, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        })), React.createElement(Col, {\n          sm: 6,\n          smOffset: 0,\n          xsOffset: 2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, React.createElement(Search, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }))), React.createElement(Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, React.createElement(Col, {\n          sm: 6,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"image-parent\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          className: \"movie-full-image\",\n          src: \"https://image.tmdb.org/t/p/w500\" + _this3.state.movieData.poster_path,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }))), React.createElement(Col, {\n          sm: 6,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"movie-info\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, React.createElement(Col, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          className: \"movie-full-title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, _this3.state.movieData.title), React.createElement(\"p\", {\n          className: \"movie-full-genres\",\n          style: {\n            color: palette.vibrant\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, _this3.state.movieData.genres[0].name, \" | \", _this3.state.movieData.runtime, \" Minutes | \", _this3.state.movieData.release_date), React.createElement(\"p\", {\n          className: \"movie-full-overview\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, _this3.state.movieData.overview)), React.createElement(Col, {\n          xs: 6,\n          xsPull: 1,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }, React.createElement(ReactStars, {\n          count: 5,\n          value: rating,\n          size: 24,\n          color1: palette.darkMuted,\n          color2: palette.vibrant,\n          className: 'stars-full',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        })), React.createElement(Col, {\n          xs: 6,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          className: \"rating\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }, rating * 2)), React.createElement(Col, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: {\n            pathname: \"/Recommender/\".concat(_this3.state.movieData.id)\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          style: {\n            borderColor: palette.vibrant,\n            color: palette.vibrant\n          },\n          className: \"recom-button\",\n          onClick: \"reload()\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }, \"Recommendations\")))))));\n      }));\n    }\n  }]);\n\n  return MovieFull;\n}(Component);\n\nexport default MovieFull;","map":{"version":3,"sources":["/Users/sikidamjanovic/Documents/GitHub/Kino-Movie/src/containers/MovieFull.js"],"names":["React","Component","PropTypes","Grid","Row","Col","Clearfix","ReactStars","Search","Link","logo","Palette","NavDrawer","ratingChanged","newRating","console","log","MovieFull","props","state","requestFailed","fetch","params","id","then","response","ok","Error","d","json","setState","movieData","rating","vote_average","title","backdrop_path","palette","poster_path","color","vibrant","genres","name","runtime","release_date","overview","darkMuted","pathname","borderColor"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport PropTypes from 'prop-types'\nimport '../css/movie-full.css';\nimport '../css/main.css';\nimport {Grid, Row, Col, Clearfix} from 'react-bootstrap'\nimport ReactStars from 'react-stars'\nimport Search from '../components/Search'\nimport {Link} from 'react-router'\nimport logo from '../img/kino3.png'\nimport Palette from 'react-palette'\nimport NavDrawer from '../components/NavDrawer'\n\nconst ratingChanged = (newRating) => {\n  console.log(newRating)\n}\n\nclass MovieFull extends Component{\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      requestFailed: false\n    }\n  }\n\n  componentDidMount() {\n    fetch('https://api.themoviedb.org/3/movie/' + this.props.params.id + '?api_key=17c21a1abd8ae7be6ee8986389011906')\n      .then(response => {\n        if (!response.ok) {\n          throw Error(\"Network request failed\")\n        }\n        return response\n      })\n      .then(d => d.json())\n      .then(d => {\n        this.setState({\n          movieData: d\n        })\n      }, () => {\n        this.setState({\n          requestFailed: true\n        })\n      })\n  }\n\n\n  render () {\n\n    if (this.state.requestFailed) return <p>Failed!</p>\n    if (!this.state.movieData) return <p>Loading...</p>\n\n    var rating = (this.state.movieData.vote_average)/2\n    var title = (this.state.movieData.title)\n\n    return (\n        <div className=\"movie-full-page\">\n        <img className=\"movie-full-backdrop\"src={\"https://image.tmdb.org/t/p/w1280\" + this.state.movieData.backdrop_path}/>\n        <img className=\"logo-img-full\" src={logo}/>\n        <Palette image={\"https://image.tmdb.org/t/p/w1280\" + this.state.movieData.backdrop_path}>\n            {palette => (\n                <Grid>\n                    <Row>\n                        <Col sm={6}>\n                            <NavDrawer/>\n                        </Col>\n                        <Col sm={6} smOffset={0} xsOffset={2}>\n                            <Search/>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col sm={6} >\n                            <div className=\"image-parent\">\n                                <img className=\"movie-full-image\"src={\"https://image.tmdb.org/t/p/w500\" + this.state.movieData.poster_path}/>\n                            </div>\n                        </Col>\n                        <Col sm={6}>\n                            <div className=\"movie-info\">\n                                <Col>\n                                    <h1 className=\"movie-full-title\">{this.state.movieData.title}</h1>\n                                    <p className=\"movie-full-genres\" style={{ color: palette.vibrant }} >{this.state.movieData.genres[0].name} | {this.state.movieData.runtime} Minutes | {this.state.movieData.release_date}</p>\n                                    <p className=\"movie-full-overview\">{this.state.movieData.overview}</p>\n                                </Col>\n                                \n                                <Col xs={6} xsPull={1}>\n                                    <ReactStars\n                                        count={5}\n                                        value={rating}\n                                        size={24}\n                                        color1={palette.darkMuted}\n                                        color2={palette.vibrant}\n                                        className={'stars-full'}\n                                    />    \n                                </Col>\n\n                                <Col xs={6}>\n                                    <p className=\"rating\">{rating * 2}</p>\n                                </Col>\n\n                                <Col>\n                                    <Link to= {{pathname: `/Recommender/${this.state.movieData.id}`}}>\n                                        <p style={{borderColor: palette.vibrant, color: palette.vibrant }} className=\"recom-button\" onClick='reload()'>Recommendations</p>\n                                    </Link>\n                                </Col>\n\n                            </div>\n                        </Col>\n                    </Row>\n                </Grid>\n            )}\n        </Palette>\n      </div>\n    )\n  }\n}\n\nexport default MovieFull\n"]},"metadata":{},"sourceType":"module"}