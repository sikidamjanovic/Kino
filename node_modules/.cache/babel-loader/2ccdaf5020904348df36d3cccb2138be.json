{"ast":null,"code":"var _jsxFileName = \"/Users/sikidamjanovic/Documents/GitHub/react-movie-database/src/containers/Home.js\";\nimport React, { Component } from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport MovieCard from '../components/MovieCard';\nimport { FaSearch } from 'react-icons/fa';\nimport '../css/main.css';\nimport kinoLogo from '../img/logo.png';\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n\n    this.listenScrollEvent = e => {\n      if (window.scrollY > 18) {\n        this.setState({\n          shadow: '0px 15px 30px rgb(0,0,0,0.2)'\n        });\n      } else {\n        this.setState({\n          shadow: 'none'\n        });\n      }\n    };\n\n    this.state = {\n      data: [],\n      query: 'dark',\n      loaded: false,\n      error: false,\n      input: '',\n      shadow: 'none',\n      sort: 'revelance'\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.sortByRating = this.sortByRating.bind(this);\n    this.sortByRelevance = this.sortByRelevance.bind(this);\n    this.sortByYear = this.sortByYear.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchData();\n    window.addEventListener('scroll', this.listenScrollEvent);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.query !== this.state.query) {\n      this.fetchData();\n    } else if (prevState.sort !== this.state.sort) {\n      this.sort();\n    }\n  }\n\n  handleChange(e) {\n    console.log('changing');\n    this.setState({\n      input: e.target.value\n    });\n  }\n\n  handleSubmit(e) {\n    console.log('submitted');\n    e.preventDefault();\n    this.setState({\n      data: [],\n      query: this.state.input\n    });\n  }\n\n  sortByRating() {\n    this.setState({\n      sort: 'rating'\n    });\n  }\n\n  sortByRelevance() {\n    this.setState({\n      sort: 'relevance'\n    });\n  }\n\n  sortByYear() {\n    this.setState({\n      sort: 'year'\n    });\n  }\n\n  sortStyle(selected) {\n    var sort = this.state.sort;\n    if (sort == selected) return {\n      color: 'red'\n    };\n  }\n\n  sort() {\n    var sort = this.state.sort;\n\n    if (sort == 'rating') {\n      const data = [...this.state.data].sort((a, b) => {\n        if (a.vote_average > b.vote_average) return -1;\n        if (a.vote_average < b.vote_average) return 1;\n        return 0;\n      });\n      this.setState({\n        data: data\n      });\n    } else if (sort == 'year') {\n      const data = [...this.state.data].sort((a, b) => {\n        if (a.release_date.substring(0, 4) > b.release_date.substring(0, 4)) return -1;\n        if (a.release_date.substring(0, 4) < b.release_date.substring(0, 4)) return 1;\n        return 0;\n      });\n      this.setState({\n        data: data\n      });\n    } else {\n      this.fetchData();\n    }\n  }\n\n  fetchData() {\n    console.log('fetching'); //Api call based on user query\n\n    fetch('https://api.themoviedb.org/3/search/movie?api_key=17c21a1abd8ae7be6ee8986389011906&query=' + this.state.query).then(response => {\n      if (!response.ok) {\n        throw response;\n      }\n\n      return response.json();\n    }) //Store data in state\n    .then(json => {\n      this.setState({\n        loaded: true,\n        error: false,\n        data: json.results,\n        sort: 'relevance'\n      });\n    }) //Catches API limit errors, reloads page until limit resets\n    .catch(err => {\n      if (err.status === '429') {\n        console.log('Error 429');\n        this.setState({\n          error: true,\n          loaded: false\n        });\n        this.fetchData();\n      }\n    });\n  }\n\n  renderHeader() {\n    return React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        boxShadow: this.state.shadow\n      },\n      id: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: kinoLogo,\n      alt: \"kino\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"middle-section\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"Showing results for  \", React.createElement(\"span\", {\n      id: \"result\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"'\", this.state.query, \"'\")), React.createElement(\"div\", {\n      id: \"sort-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      style: this.sortStyle('relevance'),\n      onClick: this.sortByRelevance,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"Revelance\"), React.createElement(\"li\", {\n      style: this.sortStyle('relevance'),\n      onClick: this.sortByRating,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"Rating\"), React.createElement(\"li\", {\n      style: this.sortStyle('relevance'),\n      onClick: this.sortByYear,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"Year\")))), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Search movies\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      id: \"search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(FaSearch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }))))));\n  }\n\n  renderMovies() {\n    var data = this.state.data;\n    var loaded = this.state.loaded; //If API call was succesfull and component has data, return grid of movies\n\n    if (loaded && data.length > 1) {\n      return React.createElement(Row, {\n        className: \"movie-feed-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, data.map((item, i) => React.createElement(Col, {\n        sm: 3,\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, React.createElement(MovieCard, {\n        key: data[i].id,\n        id: data[i].id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }))));\n    } //TODO: Return placeholder for movie loading \n    else {\n        return React.createElement(\"div\", {\n          id: \"no-movies-found\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 181\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182\n          },\n          __self: this\n        }, \"No movies found\"));\n      }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"app\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, this.renderHeader(), this.renderMovies()));\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/sikidamjanovic/Documents/GitHub/react-movie-database/src/containers/Home.js"],"names":["React","Component","Container","Row","Col","MovieCard","FaSearch","kinoLogo","Home","constructor","props","listenScrollEvent","e","window","scrollY","setState","shadow","state","data","query","loaded","error","input","sort","handleSubmit","bind","handleChange","sortByRating","sortByRelevance","sortByYear","componentDidMount","fetchData","addEventListener","componentDidUpdate","prevProps","prevState","console","log","target","value","preventDefault","sortStyle","selected","color","a","b","vote_average","release_date","substring","fetch","then","response","ok","json","results","catch","err","status","renderHeader","boxShadow","renderMovies","length","map","item","i","id","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport MovieCard from '../components/MovieCard'\nimport { FaSearch } from 'react-icons/fa'\nimport '../css/main.css'\nimport kinoLogo from '../img/logo.png'\n\nclass Home extends Component {\n    \n    constructor(props){\n        super(props);\n        this.state = {\n            data: [],\n            query: 'dark',\n            loaded: false,\n            error: false,\n            input: '',\n            shadow: 'none',\n            sort: 'revelance',\n        }\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.handleChange = this.handleChange.bind(this)\n        this.sortByRating = this.sortByRating.bind(this)\n        this.sortByRelevance = this.sortByRelevance.bind(this)\n        this.sortByYear = this.sortByYear.bind(this)\n    }\n\n    listenScrollEvent = e => {\n        if (window.scrollY > 18) {\n          this.setState({shadow: '0px 15px 30px rgb(0,0,0,0.2)'})\n        } else {\n          this.setState({shadow: 'none'})\n        }\n    }\n\n    componentDidMount() {\n        this.fetchData()\n        window.addEventListener('scroll', this.listenScrollEvent)\n    }\n\n    componentDidUpdate(prevProps, prevState){\n        if(prevState.query !== this.state.query){\n            this.fetchData()\n        }\n        else if(prevState.sort !== this.state.sort){\n            this.sort()\n        }\n    }\n\n    handleChange(e){\n        console.log('changing')\n        this.setState({ input: e.target.value})\n    }\n\n    handleSubmit(e){\n        console.log('submitted')\n        e.preventDefault()\n        this.setState({ data: [], query: this.state.input })\n    }\n\n    sortByRating(){\n        this.setState({ sort: 'rating' })\n    }\n\n    sortByRelevance(){\n        this.setState({ sort: 'relevance' })\n    }\n\n    sortByYear(){\n        this.setState({ sort: 'year' })\n    }\n\n    sortStyle(selected){\n        var sort = this.state.sort\n        if(sort == selected)\n        return {\n            color: 'red'\n        }\n    }\n\n    sort(){\n        var sort = this.state.sort\n        if(sort == 'rating'){\n            const data = [...this.state.data].sort((a,b) =>{\n                if(a.vote_average > b.vote_average) return -1\n                if(a.vote_average < b.vote_average) return 1;\n                return 0\n            })\n            this.setState({ data: data })\n        }\n        else if(sort == 'year'){\n            const data = [...this.state.data].sort((a,b) =>{\n                if(a.release_date.substring(0, 4) > b.release_date.substring(0, 4)) return -1\n                if(a.release_date.substring(0, 4) < b.release_date.substring(0, 4)) return 1;\n                return 0\n            })\n            this.setState({ data: data })\n        }\n        else{\n            this.fetchData()\n        }\n    }\n\n    fetchData(){\n        console.log('fetching')\n        //Api call based on user query\n        fetch('https://api.themoviedb.org/3/search/movie?api_key=17c21a1abd8ae7be6ee8986389011906&query='+ this.state.query)\n        .then( response => {\n            if (!response.ok) { throw response }\n            return response.json() \n        })\n        //Store data in state\n        .then( json => {\n            this.setState({loaded:true, error:false, data: json.results, sort: 'relevance'}) \n        })\n        //Catches API limit errors, reloads page until limit resets\n        .catch( err => {\n            if(err.status === '429'){\n                console.log('Error 429')\n                this.setState({error:true, loaded: false})\n                this.fetchData()\n            }\n        })\n    }\n\n    renderHeader(){\n        return(\n            <Row>\n                <Col>\n                    <div style={{ boxShadow: this.state.shadow }} id=\"header\">\n                        <img src={kinoLogo} alt=\"kino\"></img>\n\n                        <div id=\"middle-section\">\n                            <h1>Showing results for  <span id=\"result\">'{this.state.query}'</span></h1>\n                            <div id=\"sort-container\">\n                                <ul>\n                                    <li style={this.sortStyle('relevance')} onClick={this.sortByRelevance}>Revelance</li>\n                                    <li style={this.sortStyle('relevance')} onClick={this.sortByRating}>Rating</li>\n                                    <li style={this.sortStyle('relevance')} onClick={this.sortByYear}>Year</li>\n                                </ul>\n                            </div>\n                        </div>\n                        \n                        <form onSubmit={this.handleSubmit}>\n                            <input \n                                type=\"text\"\n                                placeholder=\"Search movies\"\n                                onChange={this.handleChange}\n                            />\n                            <button \n                                type=\"submit\" \n                                id=\"search\"\n                            >\n                                <FaSearch/>\n                            </button>\n                        </form>\n                    </div>\n                </Col>\n            </Row>\n        )\n    }\n\n    renderMovies(){\n        var data = this.state.data\n        var loaded = this.state.loaded\n        //If API call was succesfull and component has data, return grid of movies\n        if(loaded && data.length>1){\n            return (\n                <Row className=\"movie-feed-row\">\n                    {data.map((item, i) => (\n                            <Col sm={3} key={i}>\n                                <MovieCard key={data[i].id} id={data[i].id}/>\n                            </Col>\n                    ))}\n                </Row>\n            )\n        }\n        //TODO: Return placeholder for movie loading \n        else{\n            return( \n                <div id=\"no-movies-found\">\n                    <h1>No movies found</h1>\n                </div>\n            )\n\n        }\n    }\n\n    render() {\n        return (\n            <div id=\"app\">\n                <Container>\n                    {this.renderHeader()}\n                    {this.renderMovies()}\n                </Container>\n            </div>\n        );\n    }\n}\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}